package controller;

import dao.SerialNumberDAO;
import dao.StockMovementDetailDAO;
import dao.StockMovementResponseDAO;
import dao.StockMovementsRequestDAO;
import dao.WareHouseDAO;
import model.StockMovementDetail;

import java.io.IOException;
import java.util.List;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet(name = "WHCompleteExportController", urlPatterns = {"/complete-stock-export"})
public class WHCompleteExportController extends HttpServlet {

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String dbName = (String) request.getSession().getAttribute("dbName");
        String movementIDStr = request.getParameter("movementID");
        String warehouseIDStr = request.getParameter("warehouseID");

        System.out.println("=== DEBUG: ƒê·∫ßu v√†o ===");
        System.out.println("MovementID: " + movementIDStr);
        System.out.println("WarehouseID: " + warehouseIDStr);
        System.out.println("DBName: " + dbName);

        if (movementIDStr == null || warehouseIDStr == null ||
                movementIDStr.isBlank() || warehouseIDStr.isBlank()) {
            System.out.println("‚ùå Thi·∫øu th√¥ng tin ƒë·∫ßu v√†o");
            request.getSession().setAttribute("error", "Thi·∫øu th√¥ng tin ƒë∆°n xu·∫•t ho·∫∑c kho xu·∫•t.");
            response.sendRedirect("wh-export");
            return;
        }

        try {
            int movementID = Integer.parseInt(movementIDStr);
            int warehouseID = Integer.parseInt(warehouseIDStr);

            StockMovementDetailDAO detailDAO = new StockMovementDetailDAO();
            WareHouseDAO warehouseDAO = new WareHouseDAO();
            SerialNumberDAO serialDAO = new SerialNumberDAO();
            StockMovementResponseDAO responseDAO = new StockMovementResponseDAO();
            StockMovementsRequestDAO requestDAO = new StockMovementsRequestDAO();

            // L·∫•y danh s√°ch d√≤ng chi ti·∫øt
            List<StockMovementDetail> details = detailDAO.getRawDetailsByMovementID(dbName, movementID);
            System.out.println("=== DEBUG: Danh s√°ch chi ti·∫øt ===");
            System.out.println("S·ªë l∆∞·ª£ng d√≤ng: " + details.size());
            
            for (StockMovementDetail detail : details) {
                System.out.println("DetailID: " + detail.getDetailID() + 
                                  ", ProductID: " + detail.getProductID() + 
                                  ", ProductDetailID: " + detail.getProductDetailID() + 
                                  ", Quantity: " + detail.getQuantity());
            }

            // X·ª≠ l√Ω t·ª´ng d√≤ng chi ti·∫øt
            for (StockMovementDetail detail : details) {
                System.out.println("=== DEBUG: X·ª≠ l√Ω detail " + detail.getDetailID() + " ===");
                
                // Tr∆∞·ªõc khi tr·ª´ kho
                System.out.println("Tr·ª´ kho: WarehouseID=" + warehouseID + 
                                  ", ProductID=" + detail.getProductID() + 
                                  ", Quantity=" + detail.getQuantity());
                
                // Tr·ª´ kho
                warehouseDAO.subtractWarehouseProduct(dbName, warehouseID, detail.getProductDetailID(), detail.getQuantity());
                System.out.println("‚úÖ ƒê√£ tr·ª´ kho th√†nh c√¥ng");

                // C·∫≠p nh·∫≠t serial
                System.out.println("C·∫≠p nh·∫≠t serial: DetailID=" + detail.getDetailID() + 
                                  ", WarehouseID=" + warehouseID);
                serialDAO.markSerialsAsTransferring(dbName, detail.getDetailID(), warehouseID);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t serial th√†nh c√¥ng");
            }

            // C·∫≠p nh·∫≠t request
            System.out.println("=== DEBUG: C·∫≠p nh·∫≠t request ===");
            System.out.println("MovementID: " + movementID + ", FromWarehouseID: " + warehouseID);
            requestDAO.updateExportRequestTransferInfo(dbName, movementID, warehouseID);
            System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t request th√†nh c√¥ng");

            // C·∫≠p nh·∫≠t ph·∫£n h·ªìi
            System.out.println("=== DEBUG: C·∫≠p nh·∫≠t response ===");
            responseDAO.markAsTransferring(dbName, movementID);
            System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t response th√†nh c√¥ng");

            System.out.println("üéâ Ho√†n t·∫•t ƒë∆°n xu·∫•t th√†nh c√¥ng!");
            request.getSession().setAttribute("success", "ƒê∆°n xu·∫•t ƒë√£ ƒë∆∞·ª£c chuy·ªÉn ƒëi th√†nh c√¥ng!");

        } catch (Exception e) {
            System.out.println("‚ùå L·ªói khi ho√†n t·∫•t ƒë∆°n xu·∫•t:");
            e.printStackTrace();
            request.getSession().setAttribute("error", "ƒê√£ x·∫£y ra l·ªói khi ho√†n t·∫•t ƒë∆°n xu·∫•t: " + e.getMessage());
        }

        response.sendRedirect("wh-export");
    }

    @Override
    public String getServletInfo() {
        return "X·ª≠ l√Ω ho√†n t·∫•t ƒë∆°n xu·∫•t kho";
    }
}
